{"version":3,"sources":["components/Firebase.js","components/Login.js","components/Header.js","components/Addtodo.js","components/Todoitem.js","components/Todo.js","components/pages/About.js","components/Table.js","App.js","serviceWorker.js","index.js"],"names":["Firebase","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","SignupForm","props","onSubmit","event","state","username","email","passwordOne","auth","createUserWithEmailAndPassword","then","authUser","database","ref","user","uid","set","setState","passwordTwo","error","console","log","toggleSignupOff","catch","preventDefault","onChange","target","name","value","this","isInvalid","class","style","linkstyle","to","type","placeholder","disabled","href","onClick","handleSignupoff","textDecoration","color","message","React","Component","SigninForm","password","signInWithEmailAndPassword","signedin","toggleSignedIn","handleSignupLinkClicked","toggleSignupOn","bind","className","SignoutForm","signOut","toggleSignOut","Login","showsignup","listenForAuthChange","onAuthStateChanged","Header","mama","background","textAlign","padding","Addtodo","title","e","addTodo","id","flex","db","Todoitem","getStyle","borderBottom","todox","completed","writeTodo","written","markComplete","delTodo","Todo","todo","map","key","About","Fragment","Table","staffs","salary","stafftype","staff","index","renderTable","App","uuid","v4","filter","remove","newTodo","exact","path","render","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c884350.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nconst config={\r\napiKey: \"AIzaSyDpZnMv0pQDD-XQvpJamxhbe3-AWK06wgk\",\r\nauthDomain: \"convert-my-project.firebaseapp.com\",\r\ndatabaseURL: \"https://convert-my-project.firebaseio.com\",\r\nprojectId: \"convert-my-project\",\r\nstorageBucket: \"convert-my-project.appspot.com\",\r\nmessagingSenderId: \"242730141146\",\r\nappId: \"1:242730141146:web:9ffc279a35c25b1b152ce3\",\r\nmeasurementId: \"G-GK5PJVT0RP\"\r\n}\r\nconst Firebase = firebase.initializeApp(config);\r\nexport default Firebase;","import React from 'react';\r\nimport { BrowserRouter as Router , Route } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from './Firebase';\r\n\r\nclass SignupForm extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: '',\r\n      email: '',\r\n      passwordOne: '',\r\n      passwordTwo: '',\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne } = this.state;\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        // Create a user in your Firebase realtime database\r\n        firebase.database().ref('users/'+ authUser.user.uid)\r\n          .set({\r\n            username,\r\n            email,\r\n          });\r\n          this.setState({\r\n            username: '',\r\n            email: '',\r\n            passwordOne: '',\r\n            passwordTwo: '',\r\n            error: null,\r\n          });\r\n          console.log(authUser);\r\n          this.props.toggleSignupOff();\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {  \r\n    const {\r\n      username,\r\n      email,\r\n      passwordOne,\r\n      passwordTwo,\r\n      error,\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === '' ||\r\n      email === '' ||\r\n      username === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <div class=\"navbar\">\r\n         <Link style={linkstyle} to=\"/\"> Home </Link> | \r\n         <Link style={linkstyle} to=\"/about\"> About </Link> \r\n         </div>\r\n        <div>\r\n        <input\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Full Name\"\r\n        />\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        </div>\r\n        <div>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n        />\r\n        </div>\r\n        <button disabled={isInvalid} type=\"submit\" class=\"signup\">\r\n          Sign Up\r\n        </button>\r\n        <a href='' onClick={this.handleSignupoff}\r\n        style={{ textDecoration: 'none', color: '#8fe3ff' }}\r\n        >Already have an account?</a>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nclass SigninForm extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      error: null,\r\n    };\r\n    this.handleSignupLinkClicked = this.handleSignupLinkClicked.bind(this);\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n\r\n    firebase.auth().signInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({\r\n          email: '',\r\n          password: '',\r\n          error: null,\r\n          signedin: true\r\n        });\r\n        this.props.toggleSignedIn();\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault(); // prevent following the url (undefined) after clicking submit\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSignupLinkClicked = event => {\r\n    this.props.toggleSignupOn();\r\n    event.preventDefault();\r\n  }\r\n  handleSignupoff = event => {\r\n    this.props.toggleSignupOff();\r\n    event.preventDefault();\r\n  }\r\n\r\n\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n\r\n    const isInvalid = password === '' || email === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <div class=\"navbar\">\r\n         <Link style={linkstyle} to=\"/\"> Home </Link> | \r\n         <Link style={linkstyle} to=\"/about\"> About </Link>  \r\n         </div>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\" className=\"signin\">\r\n          Sign In\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n        <p>\r\n        <a href='' onClick={this.handleSignupLinkClicked}\r\n        style={{ textDecoration: 'none', color: '#8fe3ff' }}\r\n        >Don't have an account?</a>\r\n        </p>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nclass SignoutForm extends React.Component{\r\n \r\n  onSubmit = event => {\r\n\r\n    firebase.auth().signOut()\r\n    .then(() => {\r\n      this.props.toggleSignOut();\r\n    })\r\n    .catch(error => {\r\n      this.setState({ error });\r\n    });\r\n\r\n    event.preventDefault(); \r\n  }\r\n  render() {\r\n    return (\r\n    <form onSubmit={this.onSubmit}>\r\n      <div class=\"navbar\">   \r\n      <Link style={linkstyle} to=\"/\"> Home </Link> | \r\n      <Link style={linkstyle} to=\"/about\"> About </Link> |  \r\n      <Link style={linkstyle} to=\"/Table\"> Staff table </Link> |\r\n    <button type=\"submit\" class=\"signout\">\r\n          Sign Out\r\n          </button>\r\n    </div>\r\n    </form>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivatePage(props) {\r\n    return (\r\n    <Router> \r\n        <div>\r\n            this\r\n        </div>\r\n    </Router>   \r\n  )\r\n}\r\n\r\nexport default class Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signedin: false,\r\n      showsignup: false\r\n    };\r\n    this.toggleSignupOn = this.toggleSignupOn.bind(this);\r\n    this.toggleSignupOff = this.toggleSignupOff.bind(this);\r\n    this.toggleSignedIn = this.toggleSignedIn.bind(this);\r\n    this.toggleSignOut = this.toggleSignOut.bind(this);\r\n  }\r\n\r\n  toggleSignupOn() {\r\n    this.setState({showsignup:true})\r\n  }\r\n\r\n  toggleSignupOff() {\r\n    this.setState({showsignup:false})\r\n  }\r\n\r\n  toggleSignedIn() {\r\n    this.setState({signedin:true})\r\n  }\r\n  toggleSignOut(){\r\n    this.setState({signedin:false})\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    this.listenForAuthChange();\r\n  }\r\n\r\n  listenForAuthChange() {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      console.log(\"auth changed\");\r\n      if (user)\r\n        console.log('User details', user);\r\n      else\r\n        console.log(\"no one is signed in \");\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.signedin === false){\r\n      if (this.state.showsignup)\r\n        return <SignupForm toggleSignupOff={this.toggleSignupOff}/>\r\n      else {\r\n        return <SigninForm toggleSignupOn={this.toggleSignupOn} toggleSignedIn={this.toggleSignedIn}/>\r\n      }\r\n    }\r\n    else{\r\n      return <SignoutForm toggleSignOut={this.toggleSignOut}  />\r\n    }\r\n  }\r\n  \r\n  \r\n}\r\nconst linkstyle = {\r\n  color: '#fff',\r\n  textDecoration: 'none',\r\n  \r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Login from './Login'; \r\n\r\nexport default function Header() {\r\n    return (\r\n        <header style={mama}>\r\n            <h1>Amusement Park</h1>\r\n            <Login />   \r\n        </header>\r\n    )\r\n}\r\n\r\nconst mama = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n\r\n}\r\nconst linkstyle = {\r\n    color: '#fff',\r\n    textDecoration: 'none'\r\n}","import React, { Component } from 'react'\r\n\r\nexport class Addtodo extends Component {\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value });\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state.title);\r\n        this.setState({title: ''});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit} id='assign'>\r\n                <input \r\n                type=\"text\" \r\n                name=\"title\" \r\n                style={{ flex: '10', padding: '10px' }}\r\n                placeholder=\"Add Assignment....\" \r\n                value = {this.state.title}\r\n                onChange={this.onChange}\r\n                />\r\n                <input  \r\n                type=\"submit\"\r\n                value=\"Submit\"\r\n                id=\"submit\"\r\n                className=\"btn\"\r\n                style={{flex: '1' }}\r\n                />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Addtodo\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport firebase from 'firebase';\r\n\r\nconst db = firebase.database();\r\nconst written = 1;\r\nexport class Todoitem extends Component {\r\n    // Get state of Complete then determine complete state\r\n    getStyle = () => {\r\n        return {\r\n            background: '#f0fffd',\r\n            padding: '10px',\r\n            borderBottom: '1px #ccc dotted',\r\n            textDecoration: this.props.todox.completed ?\r\n            'line-through' : 'none'\r\n        }\r\n    }\r\n    writeTodo(){\r\n        const { id , title } = this.props.todox;\r\n        db.ref('Amusement/job/' + id).set({\r\n            id: id,\r\n            title: title,\r\n          });\r\n    }\r\n    renderWritten(){\r\n        if (written < 4){\r\n            this.writeTodo()\r\n            this.written = written+1\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { id , title } = this.props.todox;\r\n        return (\r\n            <div style={this.getStyle()} id='work'>\r\n                <p>\r\n                <input type=\"checkbox\" \r\n                onChange={this.props.markComplete.bind(this, id)}/> \r\n                {' '}\r\n                { title }\r\n                <button onClick={this.props.delTodo.bind(this, id)} id='del'>x</button>\r\n                </p>\r\n                {this.writeTodo()}\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\n// PropType\r\nTodoitem.propTypes = {\r\n    todox: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Todoitem\r\n","import React, { Component } from 'react';\r\nimport Todoitem from './Todoitem';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nclass Todo extends Component {\r\n        // for each document \r\n      render() {\r\n        console.log(this.props.todo)\r\n        return this.props.todo.map((todox) =>(\r\n            <Todoitem key={todox.id} \r\n            todox={todox} \r\n            markComplete={this.props.markComplete}\r\n            delTodo={this.props.delTodo}/>\r\n        ));\r\n      }\r\n}\r\n\r\n// PropTypes\r\nTodo.propTypes = {\r\n    todox: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Todo;\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <React.Fragment>\r\n            <h1>About</h1>\r\n            <p>This is assignment manager app</p>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport firebase from 'firebase';\r\n\r\nconst db = firebase.database();\r\n\r\nexport class Table extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            staffs: [\r\n                { id: 1, name: 'Wasif', salary: 10000, stafftype: 'Manager' },\r\n                { id: 2, name: 'Ali', salary: 15000, stafftype: 'Attraction staff' },\r\n                { id: 3, name: 'Saad', salary: 30000, stafftype: 'Mechanic' },\r\n                { id: 4, name: 'Asad', salary: 16000, stafftype: 'Attraction staff' }\r\n            ]\r\n        }\r\n    }\r\n    \r\n    renderTable(){\r\n        return this.state.staffs.map((staff, index) => {\r\n            const{ id, name, salary, stafftype } = staff\r\n            db.ref('Amusement/staff/' + id).set({\r\n                id: id,\r\n                name: name,\r\n                salary: salary,\r\n                stafftype: stafftype\r\n              });\r\n            return (\r\n                <tr key={id}>\r\n                    <td>{id}</td>\r\n                    <td>{name}</td>\r\n                    <td>{salary}</td>\r\n                    <td>{stafftype}</td>\r\n                </tr>\r\n            )\r\n        })\r\n      }\r\n\r\n\r\n      render() {\r\n        return (\r\n           <div>\r\n              <table>\r\n                 <tbody>\r\n                    <tr><th>ID</th><th>Name</th><th>Salary</th><th>Staff-type</th></tr>\r\n                    {this.renderTable()}\r\n                 </tbody>\r\n              </table>\r\n           </div>\r\n        )\r\n     }\r\n}\r\n\r\nexport default Table\r\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Addtodo from './components/Addtodo';\nimport Todo from './components/Todo';\nimport { BrowserRouter as Router , Route } from 'react-router-dom';\nimport firebase from './components/Firebase';\nimport uuid from 'uuid';\nimport About from './components/pages/About';\n\nimport './App.css';\nimport Table from './components/Table';\n\n\n\nconst db = firebase.database();\n\n\n\nclass App extends Component {\n      state = {\n        todo: [\n          {\n            id: uuid.v4(), \n            title: 'take out trash',\n            completed: false\n          },\n          {\n            id: uuid.v4() ,\n            title: 'Prepare for grand opening',\n            completed: false\n          },\n          {\n            id: uuid.v4() ,\n            title: 'Buy more supply',\n            completed: false\n          }\n        ]\n      }\n      // toggle completed\n      markComplete = (id) => {\n        this.setState( { todo: this.state.todo.map(todo => {\n          if(todo.id === id) {\n            todo.completed = !todo.completed\n          }\n          return todo;\n        })} )\n      }\n      delTodo = (id) => {\n        this.setState({ todo: [...this.state.todo.filter(todox => todox.id !== id)] })\n        db.ref('Amusement/job/' + id).remove()\n      }\n\n      addTodo = (title) => {\n        const newTodo = {\n          id: uuid.v4(),\n          title: title,\n          completed: false\n        }\n        this.setState({ todo: [...this.state.todo, newTodo] });\n      }\n\n\n\n\n\n      render() {\n        return (\n          <Router>\n            <div className=\"App\">\n              <div className=\"container\">\n              <Header />\n              <Route exact path=\"/\" render={props => (\n                <React.Fragment>\n                  <Addtodo addTodo={this.addTodo} />\n                  <Todo todo={this.state.todo}\n                  markComplete={this.markComplete}\n                  delTodo={this.delTodo}\n                  />\n                </React.Fragment>\n              )}/>\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/Table\" component={Table}/>\n              </div>\n            </div>\n          </Router>\n        );\n      }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}